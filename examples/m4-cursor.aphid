; m4-cursor.aphid
;; This works, but right now (2020-11-20) the repeat rate is just the unrestricted
;; default MonoGame repeat rate, which is abysmal. Needs fixed.

0 :x setvar
0 :y setvar

7 setbg  ; blue background

{ :x getvar :y getvar 15 " " setxy } :remove-cursor defword
{ :x getvar :y getvar 15 "ring-closed" setxy } :plot-cursor defword

{
  :#cursor-right key-down? { 
      remove-cursor
      :x inc
      :x getvar 39 int> { 39 :x setvar } when
  } when
  :#cursor-left key-down? {
      remove-cursor
      :x dec
      :x getvar 0 int< { 0 :x setvar } when
  } when
  :#cursor-down key-down? { 
      remove-cursor
      :y inc
      :y getvar 24 int> { 24 :y setvar } when
  } when
  :#cursor-up key-down? {
      remove-cursor
      :y dec
      :y getvar 0 int< { 0 :y setvar } when
  } when
  plot-cursor
} :move-cursor defword

;; There's a lot of repetition here; once we have a dictionary type, we could
;; put key => block values in it, and have a special word handle the call
;; to key-down? and the lookup.

;; There's ALSO a lot of repetition with getting and setting variables, it's
;; a bit cumbersome, so maybe it's time for the first shorthands. Also maybe
;; a word that "caps" a variable (or value? then it would be like min/max, but
;; I'd like better names, really)

:move-cursor set-updater
